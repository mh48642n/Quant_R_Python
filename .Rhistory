#Do this
pairs(~ `Full Market Value` + `Net Operating Income 1` + `Net Operating Income 2`)
library(readxl)
library(dplyr)
initial_data <- read_xlsx(file.choose(), sheet = "DOF_Condos")
initial_data <- read_table(file.choose(), sheet = "DOF_Condos")
initial_data <- read_xlxs("C:\Users\marvi\OneDrive\Documents\GitHub\Quant_R_Python\DOF_Condominium_Comparable_Rental_Income_in_NYC.csv", sheet = "DOF_Condos")
initial_data <- read_xlxs("C:\\Users\marvi\OneDrive\Documents\GitHub\Quant_R_Python\DOF_Condominium_Comparable_Rental_Income_in_NYC.csv", sheet = "DOF_Condos")
initial_data <- read_xlxs("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Condominium_Comparable_Rental_Income_in_NYC.csv", sheet = "DOF_Condos")
#First extracted the data from csv file
library(readxl)
initial_data <- read_xlxs("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Condominium_Comparable_Rental_Income_in_NYC.csv", sheet = "DOF_Condos")
initial_data <- read_excel("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Condominium_Comparable_Rental_Income_in_NYC.csv", sheet = "DOF_Condos")
getwd()
initial_data <- read_excel("C:\Users\marvi\OneDrive\Documents\GitHub\Quant_R_Python\DOF_Rent_income.xlsx", sheet = "DOF_Condos")
initial_data <- read_excel("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Rent_income.xlsx", sheet = "DOF_Condos")
attach(initial_data)
as.data.frame(initial_data)
colnames(initial_data)
factor_neighborhood <- factor(Neighborhood, levels = rev(unique(Neighborhood)), ordered = T)
levels(factor_neighborhood)
#principles for dealing with the changing world order
#Make use of the factor function to categorize the neighborhood data
#Categorize the data into zip code info, hence making the column numerical
#Then make a regression off with Income, Expenditures as the regressors
#Then I will use Gross Sqft(greater than some number) and Neighborhood as a dummy variable
factor_neighborhood <- factor(Neighborhood, levels = rev(unique(Neighborhood)), ordered = F)
str(initial_data)
initial_data$In_Man <- ifelse(grepl("1-", initial_data$`Boro-Block-Lot`), 1, 0)
initial_data$In_Bx <- ifelse(grepl("2-", initial_data$`Boro-Block-Lot`), 1, 0)
initial_data$In_Bk <- ifelse(grepl("3-", initial_data$`Boro-Block-Lot`), 1, 0)
initial_data$In_Qn <- ifelse(grepl("4-", initial_data$`Boro-Block-Lot`), 1, 0)
initial_data$In_SI <- ifelse(grepl("5-", initial_data$`Boro-Block-Lot`), 1, 0)
collapse?
#Here I will create dummy variables
#I make use of the ifelse function to create the dummy variables
#Based off of the code in the Boro-Block-Lot where the first number would determine
#what Borough the property is located in New York
initial_data$In_Man <- ifelse(grepl("1-", initial_data$`Boro-Block-Lot`), 1, 0)
help(collapse)
initial_data[, 10]
initial_data[10, ]
colnames(initial_data)
complete_dataset <-
initial_data %>% select(  -contains("Condo")|
-contains("Building")|
-contains("Address"))
complete_dataset <-
initial_data %>% select(  -contains("Condo"))
rm(complete_dataset)
initial_data %>% select(-contains("Condo", "Address", "Building")
complete_dataset <-
complete_dataset <-
initial_data %>% select(-contains("Condo")) + initial_data %>% select(-contains("Address")) +
initial_data %>% select(-contains("Building"))
initial_data %>% select(-contains("Condo"))
initial_data %>% select(-contains("Address"))
initial_data %>% select(-contains("Building"))
initial_data <- initial_data %>% select(-contains("Condo"))
initial_data<- initial_data %>% select(-contains("Address"))
complete_data<- initial_data %>% select(-contains("Building"))
colnames(complete_data)
tapply(complete_dataset$`Gross SqFt`, complete_dataset$Neighborhood, max)
tapply(complete_data$`Gross SqFt`, complete_dataset$Neighborhood, max
tapply(complete_data$`Gross SqFt`, complete_dataset$Neighborhood, max)
tapply(complete_data$`Gross SqFt`, complete_dataset$Neighborhood, max)
tapply(complete_data$`Gross SqFt`, complete_data$Neighborhood, max)
#now I'm checking the median and max of gross sqft and total units, this is for each neighborhood
tapply(complete_data$`Gross SqFt`, complete_data$Neighborhood, average)
tapply(complete_data$`Gross SqFt`, complete_data$Neighborhood, mean)
library(readxl)
library(dplyr)
library(writexl)
initial_data <- read_excel("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Rent_income.xlsx",
sheet = "DOF_Condos")
attach(initial_data)
as.data.frame(initial_data)
initial_data <- initial_data %>% select(-contains("Condo"))
initial_data<- initial_data %>% select(-contains("Address"))
complete_data<- initial_data %>% select(-contains("Building"))
colnames(complete_data)
neighborhoods <- read_excel("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\DOF_Rent_income.xlsx",
sheet = "Neighborhoods")
left_join(neighborhoods, complete_data, by("Neighborhood"))
left_join(neighborhoods$Neighborhoods, complete_data$Borough, by("Neighborhood"))
inner_join(neighborhoods$Neighborhoods, complete_data$Borough, by("Neighborhood"))
rm(neighborhoods)
data <- data.frame(complete_data$Neighborhood, complete_data$Borough)
data <- data %>% group_by(Neighborhood)
data <- data %>% group_by(data$Neighborhood)
data <- data %>% group_by(data$Neighborhood)
attach(data)
data <- data %>% group_by(data$complete_data.Neighborhood)
print(data)
data <- data %>% group_by(complete_data.Neighborhood)
data <- data[order(complete_data.Neighborhood), ]
print(data)
drop(data$`data$complete_data.Neighborhood`)
data <- data %>% group_by(complete_data.Neighborhood)
data1 <- data[unique(c("complete_data.Neighborhood"))]
rm(data1, data)
colnames(complete_data)
initial_data <- initial_data %>% select(-contains("Year"))
complete_data<- initial_data %>% select(-contains("Building"))
colnames(complete_data)
write_xlsx(complete_data,
"C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\Cleaned_Condo_Data.xlsx")
unique(complete_data[c("Neighborhood")])
data <- unique(complete_data[c("Neighborhood")])
data
data <- data[order(complete_data.Neighborhood), ]
data <- unique(complete_data[c("Neighborhood")])
data <- unique(order(Neighborhood))
data <- unique(complete_data[c("Neighborhood")])
data <- data[order(data$Neighborhood)]
data <- data[order()]
data
data <- unique(complete_data[c("Neighborhood")])
data <- data[order(Neighborhood), ]
data
data <- unique(complete_data[c("Neighborhood")])
data <- data[order("Neighborhood"), ]
data
write_xlsx(complete_data,
"C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\Cleaned_Condo_Data.xlsx")
c_data <- read_excel("C:\\Users\\marvi\\OneDrive\\Documents\\GitHub\\Quant_R_Python\\Cleaned_Condo_Data.xlsx")
c_data
summary(`Total Units`)
summary(`Gross SqFt`)
summary(c_data$`Total Units`)
summary(c_data$`Gross SqFt`)
c_data$Units_more_than_30 <- ifelse(`Total Units` > 30.0, 1, 0)
attach(c_data)
as.data.frame(c_data)
c_data$Units_more_than_30 <- ifelse(`Total Units` > 30.0, 1, 0)
c_data$GSqft_more_than_58k<- ifelse(`Gross SqFt` > 58000, 1, 0)
rm(data)
cor(c_data, use = "complete.obs")
colnames(c_data)
cor(c_data[, c(2:19)], use = "complete.obs")
summary(lm(`Full Market Value` ~ comp_avgnet + comp_avggsft, c_data))
pairs(~ `Full Market Value` + comp_avggsft + comp_avgnet)
pairs(~ `Full Market Value` + comp_avggsft + comp_avgnet + comp_avggips)
summary(lm(`Full Market Value` ~ comp_avgnet + comp_avggips, c_data))
